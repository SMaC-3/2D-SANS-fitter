.DS_store
Python_oldCode/
AnnularSectorExtraction.py
#AnnularSectorExtraction_V2.py
BBY0036279_2D_2.0_18.0_CNCRw12_100ps.dat
BBY0036279_2D_2.0_18.0_CNCRw12_100ps.h5
CodeSummary.txt
#plot_multi_1D.py
#plot_sector.py
#plot_annular.py
#plot_multi_2D.py
plot_seaborn.py
rheoSANSFunctions_V1.py
rheoSANSFunctions_fitOpt_direct.py
rheoSANSFunctions_fitOpt_direct_band.py
rheoSANSFunctions_fitOpt_interp.py
#rheoSANSFunctions_fitOpt_lsq.py
#rheoSANS_2Dsim.py
rheoSANS_bandPlot.py
rheoSANS_fitOpt_direct.py
rheoSANS_fitOpt_direct_band.py
rheoSANS_fitOpt_direct_band_290320.py
rheoSANS_fitOpt_interp.py
rheoSANS_fitOpt_lsq.py
rheoSANS_plot.py
rheoSANS_sigBandPlot.py
#sans1d.py
#sans1d_lsq.py
#sans1d_run.py

*.png
*.dat
*.ipynb
misc.py

distributionComp.py

#GitHub python .gitignore template
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/
